//设计模式概论
//1设计原则
//--开闭原则  给用户一个拓展的接口，但是不能让用户修改源码
//--单一职责原则 一个模块只做一件事情
//--依赖倒置原则 上层模块不要具体的下层模块，而应该依赖于抽象
//--接口隔离原则 接口细化，功能单一
//--迪米特法则(最少知识原则) 两个对象进行沟通，然对方知道的越少越好 (中介者模式)
//--里氏替换原则 任何父类使用的地方，都可以用子类替换（子类继承父类的时候，必须保证完全继承父类的所有属性）

//设计模式分类
//1创建型  帮助我们优雅的创建对象
//工厂模式-大量创建对象
//单列模式-全局只能有一个特定的实例化对象
//建造者模式-精细化组合对象
//原型模式-js的灵魂
//2结构型  优雅的设计代码结构
//外观模式-给你一个套餐
//享元模式-共享来减少数量
//适配器模式-用适配代替更改
//桥接模式-独立出来，然后在对接过去
//装饰者模式-更优雅的扩展需求
//3行为型  模块之间行为的模式总结，帮助我们组织模块行为
//观察者模式--我作为第三方转发
//职责链模式-想生产线一样直至模块
//状态模式-用状态代替判断
//命令模式-用命令去解耦
//策略模式-算法工厂
//迭代器模式-告别for循环
//4技巧型  帮助优化代码的技巧
//链模式-链式调用
//惰性模式-我要搞机器学习
//委托模式-让别人代替你收快递
//等待者模式-等你们都回来再吃饭
//数据访问模式-一个方便的数据管理器